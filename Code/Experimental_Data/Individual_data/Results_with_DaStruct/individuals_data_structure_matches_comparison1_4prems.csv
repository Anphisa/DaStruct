"Individual ID","Correctly solved problems","Mean answer time","How many answer times were more than one std faster than mean","Most likely","2nd most likely","3rd most likely"
"THRJGF","23","3452.9375","0","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 29), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 29), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 29), ('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 29), ('BinarySearchTreeLimitedDepth,fff,integrate,10,2,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 29), ('BinarySearchTreeLimitedDepth,ff,integrate,10,2,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 29), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 29), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 29), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 29), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 29), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 29), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 29)]","[('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 28), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 28), ('BinarySearchTreeLimitedDepth,ff,integrate,10,2,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 28), ('BinarySearchTree,ff,supermodel,10,10,0,x - 10', 28), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 28), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 28), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 28), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 28), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 28), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,0,x - 10', 28), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 28), ('BinarySearchTreeLimitedDepth,fff,integrate,10,2,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 28), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 28), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,x - 10', 28), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 28)]","[('Graph,ff,supermodel,10,10,1,x - 10', 27), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTree,fff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,x - 10', 27), ('Graph,fff,supermodel,10,10,1,x - 10', 27), ('BinarySearchTree,ff,integrate,10,10,10,x - 10', 27), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 27), ('Graph,ff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,x - 10', 27), ('LinkedList,fff,supermodel,10,10,0,x - 10', 27), ('InfiniteList,fff,supermodel,10,10,0,x - 10', 27), ('LinkedList,ff,supermodel,10,10,0,x - 10', 27), ('Graph,fff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 27), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 27), ('InfiniteList,ff,supermodel,10,10,0,x - 10', 27)]"
"IVEVKT","44","13221.375","7","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 30), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 30)]","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 28), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 28), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 28), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 28)]","[('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 27), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 27)]"
"XHNLNR","39","19278.520833333332","5","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 29), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 29), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 29), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 29)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 26), ('Graph,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 26), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTree,ff,supermodel,10,10,0,x - 10', 26), ('LinkedList,ff,integrate,10,10,10,x - 10', 26), ('LinkedList,fff,supermodel,10,10,1,x - 10', 26), ('Graph,fff,integrate,10,10,10,x - 10', 26), ('InfiniteList,fff,integrate,10,10,10,x - 10', 26), ('LinkedList,ff,supermodel,10,10,1,x - 10', 26), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 26), ('LinkedList,fff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 26), ('InfiniteList,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,x - 10', 26), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 26)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 25), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 25)]"
"QULZXT","32","47110.604166666664","10","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 32), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 32)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,x - 10', 29), ('BinarySearchTreeLimitedDepth,fff,integrate,10,2,10,x - 10', 29)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,x - 10', 28)]"
"IEIRGN","43","29263.0625","4","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 29), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 29)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,x - 10', 26)]","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 25), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 25)]"
"ONEKCK","30","30849.020833333332","17","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 30), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 30), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 30), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 30)]","[('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,x - 10', 28)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 27), ('Graph,ff,integrate,10,10,10,x - 10', 27), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 27), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 27), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 27), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 27), ('LinkedList,ff,integrate,10,10,10,x - 10', 27), ('LinkedList,fff,supermodel,10,10,1,x - 10', 27), ('Graph,fff,integrate,10,10,10,x - 10', 27), ('InfiniteList,fff,integrate,10,10,10,x - 10', 27), ('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 27), ('LinkedList,ff,supermodel,10,10,1,x - 10', 27), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 27), ('LinkedList,fff,integrate,10,10,10,x - 10', 27), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 27), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 27), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 27), ('InfiniteList,ff,integrate,10,10,10,x - 10', 27), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 27), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 27)]"
"PEXVVU","45","52032.75","0","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 29), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 29), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 29), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 29), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 29), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 29)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 26), ('Graph,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 26), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 26), ('LinkedList,ff,integrate,10,10,10,x - 10', 26), ('LinkedList,fff,supermodel,10,10,1,x - 10', 26), ('Graph,fff,integrate,10,10,10,x - 10', 26), ('InfiniteList,fff,integrate,10,10,10,x - 10', 26), ('LinkedList,ff,supermodel,10,10,1,x - 10', 26), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 26), ('LinkedList,fff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 26), ('InfiniteList,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 26)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,x - 10', 23)]"
"LXUFLN","30","12848.854166666666","6","[('BinarySearchTree,ff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,x - 10', 27)]","[('Graph,ff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,x - 10', 26), ('BinarySearchTree,fff,supermodel,10,10,0,x - 10', 26), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,x - 10', 26), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,x - 10', 26), ('Graph,fff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTree,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 26), ('Graph,ff,supermodel,10,10,0,x - 10', 26), ('LinkedList,fff,supermodel,10,10,0,x - 10', 26), ('InfiniteList,fff,supermodel,10,10,0,x - 10', 26), ('LinkedList,ff,supermodel,10,10,0,x - 10', 26), ('Graph,fff,supermodel,10,10,0,x - 10', 26), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 26), ('InfiniteList,ff,supermodel,10,10,0,x - 10', 26)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 25), ('Graph,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 25), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 25), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 25), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,x - 10', 25), ('LinkedList,ff,integrate,10,10,10,x - 10', 25), ('LinkedList,fff,supermodel,10,10,1,x - 10', 25), ('Graph,fff,integrate,10,10,10,x - 10', 25), ('InfiniteList,fff,integrate,10,10,10,x - 10', 25), ('LinkedList,ff,supermodel,10,10,1,x - 10', 25), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 25), ('LinkedList,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 25), ('InfiniteList,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 25)]"
"KGSKUR","45","40556.166666666664","0","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 29), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 29)]","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 27), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 27), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 27), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 27)]","[('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 26), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 26)]"
"OAZMWE","42","19094.5","2","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 26)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 24), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 24)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 23), ('Graph,ff,integrate,10,10,10,x - 10', 23), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 23), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 23), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 23), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 23), ('BinarySearchTree,ff,supermodel,10,10,0,x - 10', 23), ('LinkedList,ff,integrate,10,10,10,x - 10', 23), ('LinkedList,fff,supermodel,10,10,1,x - 10', 23), ('Graph,fff,integrate,10,10,10,x - 10', 23), ('InfiniteList,fff,integrate,10,10,10,x - 10', 23), ('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 23), ('LinkedList,ff,supermodel,10,10,1,x - 10', 23), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 23), ('LinkedList,fff,integrate,10,10,10,x - 10', 23), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 23), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 23), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 23), ('InfiniteList,ff,integrate,10,10,10,x - 10', 23), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 23), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,x - 10', 23), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 23)]"
"EOJQYJ","38","20864.229166666668","10","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 28), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 28)]","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 26)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 25), ('Graph,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 25), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 25), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 25), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,x - 10', 25), ('LinkedList,ff,integrate,10,10,10,x - 10', 25), ('LinkedList,fff,supermodel,10,10,1,x - 10', 25), ('Graph,fff,integrate,10,10,10,x - 10', 25), ('InfiniteList,fff,integrate,10,10,10,x - 10', 25), ('LinkedList,ff,supermodel,10,10,1,x - 10', 25), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 25), ('LinkedList,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 25), ('InfiniteList,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 25)]"
"OPCKOC","27","11919.041666666666","3","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 29), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 29), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 29), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 29)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 28), ('Graph,ff,integrate,10,10,10,x - 10', 28), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 28), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 28), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 28), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 28), ('BinarySearchTree,ff,supermodel,10,10,0,x - 10', 28), ('LinkedList,ff,integrate,10,10,10,x - 10', 28), ('LinkedList,fff,supermodel,10,10,1,x - 10', 28), ('Graph,fff,integrate,10,10,10,x - 10', 28), ('InfiniteList,fff,integrate,10,10,10,x - 10', 28), ('LinkedList,ff,supermodel,10,10,1,x - 10', 28), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 28), ('LinkedList,fff,integrate,10,10,10,x - 10', 28), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 28), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 28), ('InfiniteList,ff,integrate,10,10,10,x - 10', 28), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 28), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,x - 10', 28), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 28)]","[('Graph,ff,supermodel,10,10,1,x - 10', 27), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTree,fff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,x - 10', 27), ('Graph,fff,supermodel,10,10,1,x - 10', 27), ('Graph,ff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,x - 10', 27), ('LinkedList,fff,supermodel,10,10,0,x - 10', 27), ('InfiniteList,fff,supermodel,10,10,0,x - 10', 27), ('LinkedList,ff,supermodel,10,10,0,x - 10', 27), ('Graph,fff,supermodel,10,10,0,x - 10', 27), ('InfiniteList,ff,supermodel,10,10,0,x - 10', 27)]"
"WLRLDD","36","24329.854166666668","6","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 32), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 32), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 32), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 32), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 32), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 32)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 29), ('Graph,ff,integrate,10,10,10,x - 10', 29), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 29), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 29), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 29), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 29), ('LinkedList,ff,integrate,10,10,10,x - 10', 29), ('LinkedList,fff,supermodel,10,10,1,x - 10', 29), ('Graph,fff,integrate,10,10,10,x - 10', 29), ('InfiniteList,fff,integrate,10,10,10,x - 10', 29), ('LinkedList,ff,supermodel,10,10,1,x - 10', 29), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 29), ('LinkedList,fff,integrate,10,10,10,x - 10', 29), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 29), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 29), ('InfiniteList,ff,integrate,10,10,10,x - 10', 29), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 29), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 29)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,x - 10', 26)]"
"VHHVGU","21","6616.479166666667","1","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,x - 10', 28)]","[('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTree,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTree,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('Graph,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTree,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('LinkedList,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('Graph,ff,supermodel,10,10,1,x - 10', 27), ('BinarySearchTree,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('Graph,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('Graph,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTree,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,ff,integrate,2,10,10,x - 10', 27), ('Graph,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('LinkedList,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('Graph,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,x - 10', 27), ('LinkedList,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTree,fff,supermodel,10,10,0,x - 10', 27), ('LinkedList,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('InfiniteList,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,ff,supermodel,3,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('InfiniteList,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('Graph,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,x - 10', 27), ('Graph,fff,supermodel,10,10,1,x - 10', 27), ('BinarySearchTreeTrivial,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,ff,supermodel,2,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('LinkedList,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BinarySearchTree,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BoundedList,ff,supermodel,2,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BoundedList,ff,supermodel,2,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('Graph,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('Graph,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('InfiniteList,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('Graph,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('InfiniteList,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('InfiniteList,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BinarySearchTree,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('LinkedList,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BoundedList,ff,supermodel,2,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,fff,integrate,3,10,10,x - 10', 27), ('InfiniteList,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('InfiniteList,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('InfiniteList,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BoundedList,ff,supermodel,3,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('LinkedList,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,fff,supermodel,3,10,0,x - 10', 27), ('BoundedList,ff,supermodel,2,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BoundedList,ff,supermodel,2,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BoundedList,fff,supermodel,2,10,0,x - 10', 27), ('BinarySearchTree,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BoundedList,ff,integrate,3,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BinarySearchTree,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BoundedList,fff,supermodel,2,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BoundedList,fff,supermodel,2,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('Graph,ff,supermodel,10,10,0,x - 10', 27), ('BoundedList,ff,supermodel,3,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,fff,integrate,2,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,fff,supermodel,3,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('LinkedList,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('Graph,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('InfiniteList,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BoundedList,fff,integrate,3,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('InfiniteList,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BinarySearchTreeTrivial,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BoundedList,ff,integrate,2,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 27), ('BoundedList,ff,integrate,3,10,10,x - 10', 27), ('LinkedList,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BoundedList,fff,supermodel,3,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('Graph,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 27), ('BoundedList,ff,integrate,2,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BoundedList,fff,supermodel,3,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('Graph,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTree,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,fff,supermodel,2,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('LinkedList,fff,supermodel,10,10,0,x - 10', 27), ('BoundedList,ff,supermodel,3,10,0,x - 10', 27), ('BoundedList,fff,supermodel,2,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BoundedList,fff,supermodel,2,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('LinkedList,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTree,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('InfiniteList,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('InfiniteList,fff,supermodel,10,10,0,x - 10', 27), ('BoundedList,fff,supermodel,3,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('Graph,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BinarySearchTreeTrivial,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BoundedList,fff,integrate,3,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('LinkedList,ff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTree,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BoundedList,fff,supermodel,2,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('LinkedList,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BoundedList,fff,integrate,2,10,10,x - 10', 27), ('InfiniteList,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BoundedList,ff,integrate,3,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,ff,supermodel,3,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('LinkedList,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BoundedList,ff,supermodel,3,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('InfiniteList,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('Graph,fff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTree,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('LinkedList,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,fff,supermodel,3,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BoundedList,ff,integrate,2,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BoundedList,ff,supermodel,3,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('LinkedList,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,ff,integrate,3,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('InfiniteList,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('LinkedList,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BinarySearchTree,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTree,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('LinkedList,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('LinkedList,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BoundedList,fff,integrate,2,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('InfiniteList,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('InfiniteList,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('Graph,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BoundedList,fff,integrate,2,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('InfiniteList,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('Graph,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('Graph,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('InfiniteList,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,fff,integrate,3,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('Graph,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 27), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,fff,supermodel,3,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('Graph,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BoundedList,ff,supermodel,2,10,0,x - 10', 27), ('LinkedList,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 27), ('InfiniteList,ff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 27)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTree,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 26), ('Graph,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 26), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 26), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 26), ('LinkedList,ff,integrate,10,10,10,x - 10', 26), ('BoundedList,fff,supermodel,3,10,1,x - 10', 26), ('LinkedList,fff,supermodel,10,10,1,x - 10', 26), ('BoundedList,fff,supermodel,2,10,1,x - 10', 26), ('Graph,fff,integrate,10,10,10,x - 10', 26), ('InfiniteList,fff,integrate,10,10,10,x - 10', 26), ('LinkedList,ff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTree,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 26), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 26), ('LinkedList,fff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 26), ('InfiniteList,ff,integrate,10,10,10,x - 10', 26), ('BoundedList,ff,supermodel,2,10,1,x - 10', 26), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 26), ('BinarySearchTree,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 26), ('BoundedList,ff,supermodel,3,10,1,x - 10', 26), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 26)]"
"ASSXHN","37","18038.395833333332","4","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 31), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 31), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 31), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 31)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 30), ('Graph,ff,integrate,10,10,10,x - 10', 30), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 30), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 30), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 30), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 30), ('LinkedList,ff,integrate,10,10,10,x - 10', 30), ('LinkedList,fff,supermodel,10,10,1,x - 10', 30), ('Graph,fff,integrate,10,10,10,x - 10', 30), ('InfiniteList,fff,integrate,10,10,10,x - 10', 30), ('LinkedList,ff,supermodel,10,10,1,x - 10', 30), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 30), ('LinkedList,fff,integrate,10,10,10,x - 10', 30), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 30), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 30), ('InfiniteList,ff,integrate,10,10,10,x - 10', 30), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 30), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 30)]","[('BinarySearchTree,ff,supermodel,10,10,0,x - 10', 28), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,x - 10', 28)]"
"GIGSBG","22","6346.229166666667","0","[('BinarySearchTreeLimitedDepth,fff,integrate,10,2,10,x - 10', 29), ('BinarySearchTreeLimitedDepth,ff,integrate,10,2,10,x - 10', 29)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,x - 10', 28), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,x - 10', 28)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,0,x - 10', 27), ('BoundedList,fff,supermodel,3,10,1,x - 10', 27), ('BoundedList,fff,supermodel,2,10,1,x - 10', 27), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,0,x - 10', 27), ('BoundedList,ff,supermodel,2,10,1,x - 10', 27), ('BoundedList,ff,supermodel,3,10,1,x - 10', 27)]"
"ELHJLV","38","17798.333333333332","6","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 26), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 26)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 25), ('Graph,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 25), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 25), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 25), ('LinkedList,ff,integrate,10,10,10,x - 10', 25), ('LinkedList,fff,supermodel,10,10,1,x - 10', 25), ('Graph,fff,integrate,10,10,10,x - 10', 25), ('InfiniteList,fff,integrate,10,10,10,x - 10', 25), ('LinkedList,ff,supermodel,10,10,1,x - 10', 25), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 25), ('LinkedList,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 25), ('InfiniteList,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 25)]","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 24), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 24), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 24), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 24)]"
"LRBGVD","40","25147.270833333332","7","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 26), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 26), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 26)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,x - 10', 25), ('BinarySearchTree,ff,supermodel,10,10,0,x - 10', 25), ('BinarySearchTreeLimitedDepth,fff,integrate,10,2,10,x - 10', 25), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,x - 10', 25)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 23), ('Graph,ff,integrate,10,10,10,x - 10', 23), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 23), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 23), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 23), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 23), ('LinkedList,ff,integrate,10,10,10,x - 10', 23), ('LinkedList,fff,supermodel,10,10,1,x - 10', 23), ('Graph,fff,integrate,10,10,10,x - 10', 23), ('InfiniteList,fff,integrate,10,10,10,x - 10', 23), ('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 23), ('LinkedList,ff,supermodel,10,10,1,x - 10', 23), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 23), ('LinkedList,fff,integrate,10,10,10,x - 10', 23), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 23), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 23), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 23), ('InfiniteList,ff,integrate,10,10,10,x - 10', 23), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 23), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 23)]"
"ZARPVY","23","4440.125","0","[('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeLimitedDepth,fff,integrate,10,2,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeLimitedDepth,ff,integrate,10,2,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,x - 10', 27), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,0,(lambda x: 2 if x > 2 else 3)(x)', 27), ('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,(lambda x: 2 if x > 2 else 3)(x)', 27)]","[('BinarySearchTree,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 26), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 26), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 26), ('BoundedList,fff,supermodel,3,10,1,x - 10', 26), ('BoundedList,fff,supermodel,2,10,1,x - 10', 26), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,0,x - 10', 26), ('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 26), ('BinarySearchTree,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 26), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 26), ('BinarySearchTreeLimitedDepth,ff,integrate,10,2,10,x - 10', 26), ('BoundedList,ff,supermodel,2,10,1,x - 10', 26), ('BinarySearchTree,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 26), ('BoundedList,ff,supermodel,3,10,1,x - 10', 26), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 26)]","[('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTree,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTree,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('Graph,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTree,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('LinkedList,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTree,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('Graph,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('Graph,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTree,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,ff,integrate,2,10,10,x - 10', 25), ('Graph,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('LinkedList,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('Graph,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('LinkedList,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('LinkedList,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('InfiniteList,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,ff,supermodel,3,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('InfiniteList,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('Graph,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,ff,supermodel,2,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('LinkedList,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTree,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,ff,supermodel,2,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BoundedList,ff,supermodel,2,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('Graph,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('Graph,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('InfiniteList,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('Graph,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('InfiniteList,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('InfiniteList,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTree,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('LinkedList,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BoundedList,ff,supermodel,2,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,fff,integrate,3,10,10,x - 10', 25), ('InfiniteList,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTree,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('InfiniteList,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('InfiniteList,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BoundedList,ff,supermodel,3,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('LinkedList,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,fff,supermodel,3,10,0,x - 10', 25), ('BoundedList,ff,supermodel,2,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,ff,supermodel,2,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BoundedList,fff,supermodel,2,10,0,x - 10', 25), ('BinarySearchTree,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,ff,integrate,3,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTree,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BoundedList,fff,supermodel,2,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BoundedList,fff,supermodel,2,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,ff,supermodel,3,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,fff,integrate,2,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,fff,supermodel,3,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,x - 10', 25), ('LinkedList,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('Graph,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('InfiniteList,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,fff,integrate,3,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('InfiniteList,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,ff,integrate,2,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,ff,integrate,3,10,10,x - 10', 25), ('LinkedList,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BoundedList,fff,supermodel,3,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('Graph,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,ff,integrate,2,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,fff,supermodel,3,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('Graph,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTree,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,fff,supermodel,2,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,ff,supermodel,3,10,0,x - 10', 25), ('BoundedList,fff,supermodel,2,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,fff,supermodel,2,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('LinkedList,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTree,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('InfiniteList,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,fff,supermodel,3,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('Graph,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,fff,integrate,3,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTree,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,fff,supermodel,2,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('LinkedList,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BoundedList,fff,integrate,2,10,10,x - 10', 25), ('InfiniteList,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BoundedList,ff,integrate,3,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,ff,supermodel,3,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('LinkedList,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,ff,supermodel,3,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('InfiniteList,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTree,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 25), ('LinkedList,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,fff,supermodel,3,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BoundedList,ff,integrate,2,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,ff,supermodel,3,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('LinkedList,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,ff,integrate,3,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('InfiniteList,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('LinkedList,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTree,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTree,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('LinkedList,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('LinkedList,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BoundedList,fff,integrate,2,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('InfiniteList,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('InfiniteList,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('Graph,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BoundedList,fff,integrate,2,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('InfiniteList,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('Graph,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('Graph,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('InfiniteList,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,fff,integrate,3,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('Graph,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,0,x - 10', 25), ('BoundedList,fff,supermodel,3,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25), ('Graph,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 25), ('BoundedList,ff,supermodel,2,10,0,x - 10', 25), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 25), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 25), ('LinkedList,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 25)]"
"IVOEEP","17","24990.941176470587","0","[('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 13), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 13)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 12), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 12)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,x - 10', 11)]"
"EQHJFM","28","22136.083333333332","9","[('BinarySearchTreeLimitedDepth,fff,integrate,10,2,10,x - 10', 27)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,x - 10', 26), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 26), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 26)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 25), ('Graph,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 25), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,ff,integrate,10,2,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 25), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 25), ('LinkedList,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('LinkedList,fff,supermodel,10,10,1,x - 10', 25), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('Graph,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('InfiniteList,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 25), ('LinkedList,ff,supermodel,10,10,1,x - 10', 25), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 25), ('LinkedList,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 25), ('BinarySearchTreeLimitedDepth,fff,integrate,10,2,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeLimitedDepth,ff,integrate,10,2,10,x - 10', 25), ('InfiniteList,ff,integrate,10,10,10,x - 10', 25), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 25), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 25)]"
"EJPXUT","44","14767.583333333334","2","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 30), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 30)]","[('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 27), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 27)]","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 26), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 26), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 26)]"
"ENWSAZ","28","4710.979166666667","0","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,x - 10', 26), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 26), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 26)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,0,x - 10', 25), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,x - 10', 25), ('BinarySearchTreeLimitedDepth,fff,integrate,10,2,10,x - 10', 25), ('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 25), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 25)]","[('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,x - 10', 24), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,0,x - 10', 24)]"
"BFYKHC","40","13925.729166666666","0","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 30), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 30)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,x - 10', 27)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,x - 10', 24)]"
"NNUPMA","27","1434.0208333333333","0","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 33), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 33), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 33), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 33)]","[('BinarySearchTree,ff,supermodel,10,10,0,x - 10', 32), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,x - 10', 32)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 30), ('Graph,ff,integrate,10,10,10,x - 10', 30), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 30), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 30), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 30), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 30), ('LinkedList,ff,integrate,10,10,10,x - 10', 30), ('LinkedList,fff,supermodel,10,10,1,x - 10', 30), ('Graph,fff,integrate,10,10,10,x - 10', 30), ('InfiniteList,fff,integrate,10,10,10,x - 10', 30), ('LinkedList,ff,supermodel,10,10,1,x - 10', 30), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 30), ('LinkedList,fff,integrate,10,10,10,x - 10', 30), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 30), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 30), ('InfiniteList,ff,integrate,10,10,10,x - 10', 30), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 30), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 30)]"
"KTXJOY","37","29191.0","0","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 27), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 27), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 27), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 27)]","[('BinarySearchTree,ff,supermodel,10,10,0,x - 10', 26), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,x - 10', 26)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 25), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 25)]"
"NZHPIC","11","23444.636363636364","1","[('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 7), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 7), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,0,x - 10', 7)]","[('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,x - 10', 5), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,0,x - 10', 5), ('BinarySearchTreeLimitedDepth,ff,integrate,10,2,10,x - 10', 5)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,0,x - 10', 4), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,x - 10', 4), ('BinarySearchTreeLimitedDepth,fff,integrate,10,2,10,x - 10', 4), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,x - 10', 4), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 4), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 4)]"
"FEOKVU","24","1191.0625","0","[('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,(lambda x: 2 if x > 2 else 3)(x)', 26), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,0,(lambda x: 2 if x > 2 else 3)(x)', 26), ('BinarySearchTreeLimitedDepth,fff,integrate,10,2,10,(lambda x: 2 if x > 2 else 3)(x)', 26), ('BinarySearchTreeLimitedDepth,ff,integrate,10,2,10,(lambda x: 2 if x > 2 else 3)(x)', 26), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,(lambda x: 2 if x > 2 else 3)(x)', 26), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,(lambda x: 2 if x > 2 else 3)(x)', 26), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,(lambda x: 2 if x > 2 else 3)(x)', 26), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,0,(lambda x: 2 if x > 2 else 3)(x)', 26), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,(lambda x: 2 if x > 2 else 3)(x)', 26), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,(lambda x: 2 if x > 2 else 3)(x)', 26), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,0,(lambda x: 2 if x > 2 else 3)(x)', 26), ('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,(lambda x: 2 if x > 2 else 3)(x)', 26)]","[('BinarySearchTree,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,ff,integrate,10,2,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTree,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,fff,integrate,10,2,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTree,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 25)]","[('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BinarySearchTree,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTree,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('Graph,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BinarySearchTree,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('LinkedList,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTree,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('Graph,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('Graph,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BinarySearchTree,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,ff,integrate,2,10,10,x - 10', 24), ('Graph,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('LinkedList,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('Graph,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('LinkedList,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('LinkedList,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('InfiniteList,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,ff,supermodel,3,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('InfiniteList,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('Graph,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeTrivial,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,ff,supermodel,2,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('LinkedList,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BinarySearchTree,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,ff,supermodel,2,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BoundedList,ff,supermodel,2,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('Graph,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('Graph,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('InfiniteList,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('Graph,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('InfiniteList,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('InfiniteList,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BinarySearchTree,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('LinkedList,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BoundedList,ff,supermodel,2,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,fff,integrate,3,10,10,x - 10', 24), ('InfiniteList,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('InfiniteList,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('InfiniteList,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BoundedList,ff,supermodel,3,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('LinkedList,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,fff,supermodel,3,10,0,x - 10', 24), ('BoundedList,ff,supermodel,2,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,ff,supermodel,2,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BoundedList,fff,supermodel,2,10,0,x - 10', 24), ('BinarySearchTree,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,ff,integrate,3,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BinarySearchTree,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BoundedList,fff,supermodel,2,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BoundedList,fff,supermodel,2,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,ff,supermodel,3,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,fff,integrate,2,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,fff,supermodel,3,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('LinkedList,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('Graph,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('InfiniteList,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,fff,integrate,3,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('InfiniteList,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BinarySearchTreeTrivial,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,ff,integrate,2,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,ff,integrate,3,10,10,x - 10', 24), ('LinkedList,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BoundedList,fff,supermodel,3,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('Graph,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,ff,integrate,2,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,fff,supermodel,3,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('Graph,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTree,ff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,fff,supermodel,2,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,ff,supermodel,3,10,0,x - 10', 24), ('BoundedList,fff,supermodel,2,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,fff,supermodel,2,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('LinkedList,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BinarySearchTree,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('InfiniteList,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,fff,supermodel,3,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('Graph,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BinarySearchTreeTrivial,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,fff,integrate,3,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BinarySearchTree,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,fff,supermodel,2,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('LinkedList,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BoundedList,fff,integrate,2,10,10,x - 10', 24), ('InfiniteList,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BoundedList,ff,integrate,3,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,ff,supermodel,3,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('LinkedList,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,ff,supermodel,3,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('InfiniteList,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BinarySearchTree,fff,supermodel,10,10,1,(lambda x: 2 if x > 2 else 3)(x)', 24), ('LinkedList,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,fff,supermodel,3,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BoundedList,ff,integrate,2,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,ff,supermodel,3,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('LinkedList,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,ff,integrate,3,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('InfiniteList,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('LinkedList,fff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BinarySearchTree,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTree,ff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('LinkedList,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('LinkedList,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BoundedList,fff,integrate,2,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('InfiniteList,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('InfiniteList,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('Graph,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BoundedList,fff,integrate,2,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('InfiniteList,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('Graph,fff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('Graph,ff,supermodel,10,10,0,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('InfiniteList,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,fff,integrate,3,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('Graph,ff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,sum([exp(1)**(-((x - n)/2.)) for n in timesteps])', 24), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,fff,supermodel,3,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24), ('Graph,fff,integrate,10,10,10,(lambda x: 2 if x > 2 else 3)(x)', 24), ('BoundedList,ff,supermodel,2,10,0,x - 10', 24), ('LinkedList,ff,supermodel,10,10,1,sum([exp(1)**(-((x - n)/3.)) for n in timesteps])', 24), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,(lambda x: 2 if x > 2 else 3)(x)', 24)]"
"DRUXYQ","32","61415.1875","0","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 30), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 30), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 30), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 30), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 30), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 30)]","[('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 29), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 29)]","[('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,x - 10', 28)]"
"HXKROE","33","28753.833333333332","4","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 29), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 29), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 29), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 29)]","[('BinarySearchTreeTrivial,fff,supermodel,10,10,1,x - 10', 28), ('Graph,ff,integrate,10,10,10,x - 10', 28), ('BinarySearchTreeRandomTree,ff,integrate,10,10,10,x - 10', 28), ('BinarySearchTree,fff,supermodel,10,10,1,x - 10', 28), ('InfiniteList,ff,supermodel,10,10,1,x - 10', 28), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,1,x - 10', 28), ('BinarySearchTree,ff,supermodel,10,10,0,x - 10', 28), ('LinkedList,ff,integrate,10,10,10,x - 10', 28), ('LinkedList,fff,supermodel,10,10,1,x - 10', 28), ('Graph,fff,integrate,10,10,10,x - 10', 28), ('InfiniteList,fff,integrate,10,10,10,x - 10', 28), ('LinkedList,ff,supermodel,10,10,1,x - 10', 28), ('InfiniteList,fff,supermodel,10,10,1,x - 10', 28), ('LinkedList,fff,integrate,10,10,10,x - 10', 28), ('BinarySearchTreeTrivial,fff,integrate,10,10,10,x - 10', 28), ('BinarySearchTreeRandomTree,fff,integrate,10,10,10,x - 10', 28), ('InfiniteList,ff,integrate,10,10,10,x - 10', 28), ('BinarySearchTree,fff,integrate,10,10,10,x - 10', 28), ('BinarySearchTreeTrivial,ff,supermodel,10,10,0,x - 10', 28), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,1,x - 10', 28)]","[('Graph,ff,supermodel,10,10,1,x - 10', 27), ('BinarySearchTreeRandomTree,fff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTree,fff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTreeRandomTree,ff,supermodel,10,10,0,x - 10', 27), ('BinarySearchTreeTrivial,fff,supermodel,10,10,0,x - 10', 27), ('Graph,fff,supermodel,10,10,1,x - 10', 27), ('Graph,ff,supermodel,10,10,0,x - 10', 27), ('LinkedList,fff,supermodel,10,10,0,x - 10', 27), ('InfiniteList,fff,supermodel,10,10,0,x - 10', 27), ('LinkedList,ff,supermodel,10,10,0,x - 10', 27), ('Graph,fff,supermodel,10,10,0,x - 10', 27), ('InfiniteList,ff,supermodel,10,10,0,x - 10', 27)]"
"BWBJBN","22","9111.9130434782601","0","[('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,1,x - 10', 32)]","[('BoundedList,fff,supermodel,3,10,1,x - 10', 29), ('BoundedList,fff,supermodel,2,10,1,x - 10', 29), ('BinarySearchTreeLimitedDepth,ff,integrate,10,2,10,x - 10', 29), ('BoundedList,ff,supermodel,2,10,1,x - 10', 29), ('BoundedList,ff,supermodel,3,10,1,x - 10', 29)]","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 28), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 28), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,x - 10', 28), ('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 28), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 28), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 28), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 28)]"
"LEUIYR","5","25978.428571428572","0","[('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,0,x - 10', 6)]","[('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 5), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 5)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,x - 10', 4), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,2,0,x - 10', 4)]"
"EOAQQH","43","31361.6875","7","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 31), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 31)]","[('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 28), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 28)]","[('BinarySearchTree,ff,integrate,10,10,10,x - 10', 27), ('BinarySearchTreeTrivial,ff,integrate,10,10,10,x - 10', 27), ('BinarySearchTree,ff,supermodel,10,10,1,x - 10', 27), ('BinarySearchTreeTrivial,ff,supermodel,10,10,1,x - 10', 27)]"
"WEJBNU","34","13286.25","0","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,1,x - 10', 26), ('BinarySearchTreeLimitedDepth,fff,integrate,10,3,10,x - 10', 26)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,3,0,x - 10', 25), ('BinarySearchTreeLimitedDepth,ff,integrate,10,3,10,x - 10', 25), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,1,x - 10', 25)]","[('BinarySearchTreeLimitedDepth,fff,supermodel,10,2,1,x - 10', 24), ('BinarySearchTreeLimitedDepth,ff,supermodel,10,3,0,x - 10', 24)]"
